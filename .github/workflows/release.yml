name: Release (manual or tags)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.2.0-rc.1)'
        required: false
        type: string
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1
      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.16.1 --activate
      - name: Install deps (monorepo)
        run: pnpm install --frozen-lockfile
      - name: Build CJS dist for pkg
        run: pnpm -C packages/cli build:cjs
      - name: Build OS binary
        shell: bash
        run: |
          set -euxo pipefail
          case "${{ matrix.os }}" in
            ubuntu-*)  pnpm -C packages/cli build:bin:linux ;;
            macos-*)   pnpm -C packages/cli build:bin:mac ;;
            windows-*) pnpm -C packages/cli build:bin:win ;;
          esac
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: opd-${{ matrix.os }}
          path: packages/cli/artifacts/bin/*
          if-no-files-found: error

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1
      - name: Enable pnpm via Corepack
        run: |
          corepack enable
          corepack prepare pnpm@10.16.1 --activate
      - name: Install deps (CLI)
        run: pnpm install --frozen-lockfile
      - name: Build JS dist
        run: pnpm -C packages/cli build
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: artifacts/bin
      - name: Prepare artifacts
        run: |
          set -euo pipefail
          mkdir -p artifacts
          # Optional JS dist for reference
          cp packages/cli/dist/index.js artifacts/opd.js || true
          # Downloaded artifacts are under artifacts/bin/<artifact-name>/*
          # Flatten only files (not directories) into artifacts/
          shopt -s nullglob
          for f in artifacts/bin/*/*; do
            base=$(basename "$f")
            cp "$f" "artifacts/$base"
          done
          # Checksums
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum artifacts/* > artifacts/checksums.txt
          else
            shasum -a 256 artifacts/* > artifacts/checksums.txt
          fi
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag || github.ref_name }}
          name: ${{ github.event.inputs.tag || github.ref_name }}
          artifacts: "artifacts/*"
          allowUpdates: true
          artifactErrorsFailBuild: true
          token: ${{ secrets.GITHUB_TOKEN }}
