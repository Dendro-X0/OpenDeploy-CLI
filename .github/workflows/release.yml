name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Do not use cache here; pnpm is installed via pnpm/action-setup

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Verify Node/pnpm
        run: |
          set -e
          corepack enable || true
          node -v
          pnpm -v

      - name: Get pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build workspace (providers/core)
        run: pnpm -r --workspace-concurrency=1 build

      - name: Build CLI
        run: pnpm -C packages/cli build

      - name: Build binaries (pkg)
        run: pnpm -C packages/cli build:bin

      - name: Run unit tests (CLI)
        run: pnpm -C packages/cli test -- --reporter=dot

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ./.artifacts/**

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            packages/cli/artifacts/bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
