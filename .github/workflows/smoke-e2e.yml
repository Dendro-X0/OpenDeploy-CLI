name: OpenDeploy Smoke E2E

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 1' # Weekly (Mon 08:00 UTC)

jobs:
  next-vercel-dryrun:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Enable corepack & install
        run: |
          corepack enable && corepack prepare pnpm@10.13.1 --activate
          pnpm install --frozen-lockfile
        working-directory: OpenDeploy CLI
      - name: Build CLI
        run: pnpm build
        working-directory: OpenDeploy CLI
      - name: Prepare artifacts dir
        run: mkdir -p ./.artifacts
      - name: Scaffold Next.js app
        run: |
          npx create-next-app@latest smoke-next --ts --eslint --src-dir --app --tailwind --use-pnpm --no-git --import-alias @/*
          cd smoke-next
          pnpm build
      - name: Wizard dry-run (vercel)
        run: |
          node "OpenDeploy CLI/dist/index.js" start --provider vercel --env preview \
            --json --ndjson --dry-run --summary-only \
            --json-file ./.artifacts/next-vercel-start.json \
            --ndjson-file ./.artifacts/next-vercel-start.ndjson
      - name: Up dry-run (vercel)
        run: |
          node "OpenDeploy CLI/dist/index.js" up vercel --env preview \
            --json --ndjson --summary-only --dry-run \
            --json-file ./.artifacts/next-vercel-up.json \
            --ndjson-file ./.artifacts/next-vercel-up.ndjson
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-next-vercel
          path: ./.artifacts
          if-no-files-found: ignore

  astro-netlify-dryrun:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Enable corepack & install
        run: |
          corepack enable && corepack prepare pnpm@10.13.1 --activate
          pnpm install --frozen-lockfile
        working-directory: OpenDeploy CLI
      - name: Build CLI
        run: pnpm build
        working-directory: OpenDeploy CLI
      - name: Scaffold Astro app
        run: |
          npm create astro@latest -- --template basics --skip-install --git false --yes
          cd basics
          pnpm install
          pnpm build
      - name: Generate netlify config (idempotent)
        run: |
          node "OpenDeploy CLI/dist/index.js" generate netlify \
            --json --ndjson --summary-only \
            --json-file ./.artifacts/astro-netlify-generate.json \
            --ndjson-file ./.artifacts/astro-netlify-generate.ndjson
      - name: Wizard dry-run (netlify)
        run: |
          node "OpenDeploy CLI/dist/index.js" start --provider netlify --env preview \
            --json --ndjson --dry-run --summary-only \
            --json-file ./.artifacts/astro-netlify-start.json \
            --ndjson-file ./.artifacts/astro-netlify-start.ndjson
      - name: Up dry-run (netlify)
        run: |
          node "OpenDeploy CLI/dist/index.js" up netlify --env preview \
            --json --ndjson --summary-only --dry-run \
            --json-file ./.artifacts/astro-netlify-up.json \
            --ndjson-file ./.artifacts/astro-netlify-up.ndjson
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-astro-netlify
          path: ./.artifacts
          if-no-files-found: ignore

  vercel-logs-follow-optional:
    if: ${{ secrets.VERCEL_TOKEN && secrets.VERCEL_PROJECT_ID && secrets.VERCEL_ORG_ID }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Enable corepack & install
        run: |
          corepack enable && corepack prepare pnpm@10.13.1 --activate
          pnpm install --frozen-lockfile
        working-directory: OpenDeploy CLI
      - name: Build CLI
        run: pnpm build
        working-directory: OpenDeploy CLI
      - name: Prepare artifacts dir
        run: mkdir -p ./.artifacts
      - name: Vercel logs follow (short timeout)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          node "OpenDeploy CLI/dist/index.js" logs vercel \
            --env preview \
            --project-id "${{ secrets.VERCEL_PROJECT_ID }}" \
            --org-id "${{ secrets.VERCEL_ORG_ID }}" \
            --follow \
            --timeout 30 \
            --json --ndjson --summary-only \
            --json-file ./.artifacts/vercel-logs.json \
            --ndjson-file ./.artifacts/vercel-logs.ndjson
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vercel-logs-output
          path: ./.artifacts
          if-no-files-found: ignore

  sveltekit-static-dryrun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Enable corepack & install
        run: |
          corepack enable && corepack prepare pnpm@10.13.1 --activate
          pnpm install --frozen-lockfile
        working-directory: OpenDeploy CLI
      - name: Build CLI
        run: pnpm build
        working-directory: OpenDeploy CLI
      - name: Scaffold SvelteKit app
        run: |
          npm create svelte@latest smoke-sveltekit -- --template skeleton --yes
          cd smoke-sveltekit
          pnpm install
          pnpm build
      - name: Prepare artifacts dir
        run: mkdir -p ./.artifacts
      - name: Generate netlify config (idempotent)
        run: |
          node "OpenDeploy CLI/dist/index.js" generate netlify \
            --json --ndjson --summary-only \
            --json-file ./.artifacts/sveltekit-netlify-generate.json \
            --ndjson-file ./.artifacts/sveltekit-netlify-generate.ndjson
      - name: Wizard dry-run (netlify)
        run: |
          node "OpenDeploy CLI/dist/index.js" start --provider netlify --env preview \
            --json --ndjson --dry-run --summary-only \
            --json-file ./.artifacts/sveltekit-netlify-start.json \
            --ndjson-file ./.artifacts/sveltekit-netlify-start.ndjson
      - name: Up dry-run (netlify)
        run: |
          node "OpenDeploy CLI/dist/index.js" up netlify --env preview \
            --json --ndjson --summary-only --dry-run \
            --json-file ./.artifacts/sveltekit-netlify-up.json \
            --ndjson-file ./.artifacts/sveltekit-netlify-up.ndjson
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-sveltekit-netlify
          path: ./.artifacts
          if-no-files-found: ignore
